<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.kapcb.ccc</groupId>
    <artifactId>kapcb-dependencies</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.3.12.RELEASE</version>
        <relativePath/>
    </parent>

    <!-- version control start -->
    <properties>
        <!-- base start -->
        <java.version>8</java.version>
        <resource.delimiter>@</resource.delimiter>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring-boot.version>2.3.11.RELEASE</spring-boot.version>
        <spring-cloud.version>2.2.8.RELEASE</spring-cloud.version>
        <spring-cloud-alibaba.version>2.2.5.RELEASE</spring-cloud-alibaba.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- base end -->
        <!-- spring cloud start -->
        <spring-cloud-dependencies.version>Hoxton.SR11</spring-cloud-dependencies.version>
        <spring-cloud-alibaba-dependencies.version>${spring-cloud-alibaba.version}
        </spring-cloud-alibaba-dependencies.version>
        <spring-cloud-starter-openfeign.version>${spring-cloud.version}</spring-cloud-starter-openfeign.version>
        <spring-cloud-starter-loadbalancer.version>${spring-cloud.version}</spring-cloud-starter-loadbalancer.version>
        <spring-cloud-starter-netflix-hystrix.version>${spring-cloud.version}
        </spring-cloud-starter-netflix-hystrix.version>
        <spring-cloud-starter-gateway.verion>${spring-cloud.version}</spring-cloud-starter-gateway.verion>
        <spring-cloud-stream-binder-rabbit.version>3.0.12.RELEASE</spring-cloud-stream-binder-rabbit.version>
        <spring-cloud-stream-binder-kafka.version>3.0.12.RELEASE</spring-cloud-stream-binder-kafka.version>
        <spring-cloud-stream-binder-rocketmq.version>0.9.0.RELEASE</spring-cloud-stream-binder-rocketmq.version>
        <!-- spring cloud end -->
        <!-- spring boot start -->
        <spring-boot-autoconfigure.version>${spring-boot.version}</spring-boot-autoconfigure.version>
        <spring-boot-configuration-processor.version>${spring-boot.version}
        </spring-boot-configuration-processor.version>
        <spring-boot-starter-jdbc.version>${spring-boot.version}</spring-boot-starter-jdbc.version>
        <spring-boot-starter-jdbc.version>${spring-boot.version}</spring-boot-starter-jdbc.version>
        <spring-boot-starter-data-redis.version>${spring-boot.version}</spring-boot-starter-data-redis.version>
        <spring-boot-starter-security.version>${spring-boot.version}</spring-boot-starter-security.version>
        <spring-boot-starter-mail.version>${spring-boot.version}</spring-boot-starter-mail.version>
        <spring-boot-starter-websocket.version>${spring-boot.version}</spring-boot-starter-websocket.version>
        <spring-boot-starter-webflux.version>${spring-boot.version}</spring-boot-starter-webflux.version>
        <spring-boot-starter-validation.version>${spring-boot.version}</spring-boot-starter-validation.version>
        <knife4j-spring-boot-starter.version>3.0.2</knife4j-spring-boot-starter.version>
        <!-- spring boot end -->
        <!-- spring start -->
        <spring-tx.version>5.2.15.RELEASE</spring-tx.version>
        <!-- spring end -->
        <!-- java start -->
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <!-- java end -->
        <!-- mysql start -->
        <sharding-transaction.version>4.1.1</sharding-transaction.version>
        <seata-spring-boot-starter.version>1.4.2</seata-spring-boot-starter.version>
        <mysql-connector-java.version>8.0.24</mysql-connector-java.version>
        <mybatis-plus-boot-starter.version>3.4.3</mybatis-plus-boot-starter.version>
        <dynamic-datasource-spring-boot-starter.version>3.3.2</dynamic-datasource-spring-boot-starter.version>
        <!-- mysql end -->
        <!-- commons start -->
        <commons-pool2.version>2.9.0</commons-pool2.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <lombok.version>1.18.20</lombok.version>
        <hutool-all.version>5.6.2</hutool-all.version>
        <fastjson.version>1.2.58</fastjson.version>
        <orika-core.version>1.5.4</orika-core.version>
        <xxl-job-core.version>2.3.0</xxl-job-core.version>
        <vavr.version>1.0.0-alpha-3</vavr.version>
        <vavr-jackson.version>1.0.0-alpha-3</vavr-jackson.version>
        <dom4j.version>1.6.1</dom4j.version>
        <pinyin4j.version>2.5.1</pinyin4j.version>
        <mapstruct.version>1.5.0.Beta1</mapstruct.version>
        <mapstruct-processor.version>1.5.0.Beta1</mapstruct-processor.version>
        <jjwt.version>0.9.1</jjwt.version>
        <joda-time.version>2.10.10</joda-time.version>
        <guava.version>25.1-jre</guava.version>
        <easyexcel.version>2.2.8</easyexcel.version>
        <slf4j-api.version>1.7.30</slf4j-api.version>
        <elasticsearch-rest-high-level-client.version>7.13.2</elasticsearch-rest-high-level-client.version>
        <redisson.version>3.15.6</redisson.version>
        <logstash-logback-encoder.version>6.6</logstash-logback-encoder.version>
        <easy-captcha.version>1.6.2</easy-captcha.version>
        <!-- commons end -->
    </properties>
    <!-- version control end -->

    <dependencyManagement>
        <dependencies>
            <!-- spring cloud dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring cloud alibaba dependencies -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring cloud openfeign -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud-starter-openfeign.version}</version>
            </dependency>
            <!-- spring cloud loadbalancer -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-loadbalancer</artifactId>
                <version>${spring-cloud-starter-loadbalancer.version}</version>
            </dependency>
            <!-- spring cloud hystrix -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${spring-cloud-starter-netflix-hystrix.version}</version>
            </dependency>
            <!-- spring cloud gateway -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${spring-cloud-starter-gateway.verion}</version>
            </dependency>
            <!-- spring cloud stream binder rabbit -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-stream-binder-rabbit</artifactId>
                <version>${spring-cloud-stream-binder-rabbit.version}</version>
            </dependency>
            <!-- spring cloud stream binder kafka -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-stream-binder-kafka</artifactId>
                <version>${spring-cloud-stream-binder-kafka.version}</version>
            </dependency>
            <!-- spring cloud stream binder rocketmq -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-stream-binder-rocketmq</artifactId>
                <version>${spring-cloud-stream-binder-rocketmq.version}</version>
            </dependency>
            <!-- spring boot auto configuration -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring-boot-autoconfigure.version}</version>
            </dependency>
            <!-- spring boot configuration processor -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot-configuration-processor.version}</version>
            </dependency>
            <!-- spring boot jdbc -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring-boot-starter-jdbc.version}</version>
            </dependency>
            <!-- spring boot redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot-starter-data-redis.version}</version>
            </dependency>
            <!-- spring boot security -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot-starter-security.version}</version>
            </dependency>
            <!-- spring boot mail -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>${spring-boot-starter-mail.version}</version>
            </dependency>
            <!-- spring boot websocket -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-websocket</artifactId>
                <version>${spring-boot-starter-websocket.version}</version>
            </dependency>
            <!-- spring boot webflux -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot-starter-webflux.version}</version>
            </dependency>
            <!-- spring boot validation -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot-starter-validation.version}</version>
            </dependency>
            <!-- spring tx -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring-tx.version}</version>
            </dependency>
            <!-- knife4j -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j-spring-boot-starter.version}</version>
            </dependency>
            <!-- javax servlet api -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>
            <!-- mysql connector java -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!-- mybatis plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <!-- mybatis plus dynamic datasource -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-datasource-spring-boot-starter.version}</version>
            </dependency>
            <!-- sharding jdbc core -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-core</artifactId>
                <version>${sharding-transaction.version}</version>
            </dependency>
            <!-- sharding jdbc spring boot starter -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
                <version>${sharding-transaction.version}</version>
            </dependency>
            <!-- sharding transaction base seata at -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-transaction-base-seata-at</artifactId>
                <version>${sharding-transaction.version}</version>
            </dependency>
            <!-- seata spring boot starter -->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata-spring-boot-starter.version}</version>
            </dependency>
            <!-- commons pool2 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <!-- commons collections -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- hutool all -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- orika core -->
            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>${orika-core.version}</version>
            </dependency>
            <!-- xxl job core -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job-core.version}</version>
            </dependency>
            <!-- vavr -->
            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr</artifactId>
                <version>${vavr.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr-jackson</artifactId>
                <version>${vavr-jackson.version}</version>
            </dependency>
            <!-- dom4j -->
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>
            <!-- pinyin4j -->
            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>${pinyin4j.version}</version>
            </dependency>
            <!-- mapstruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct-processor.version}</version>
            </dependency>
            <!-- jwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!-- joda time formatter -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- easyexcel -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <!-- slf4j-api -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <!-- elasticsearch rest level client -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch-rest-high-level-client.version}</version>
            </dependency>
            <!-- redisson -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <!-- logstash logback encoder -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <!-- easy captcha -->
            <dependency>
                <groupId>com.github.whvcse</groupId>
                <artifactId>easy-captcha</artifactId>
                <version>${easy-captcha.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>ma.glasnost.orika</groupId>
            <artifactId>orika-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>
</project>